{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca65f8da.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState,   useEffect    } from 'react'\r\nimport {    auth    } from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({  children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading,setLoading] = useState()\r\n    \r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout(email, password) {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n\r\n    useEffect(()=> {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    \r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState  } from 'react'\r\nimport { Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport {    Link, useHistory    } from 'react-router-dom'\r\n\r\n\r\nexport default function Signup() {\r\n    \r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signup,  currentUser} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value){\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try{\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign Up</h2> \r\n                    {/* {JSON.stringify(currentUser)} */}\r\n                    {/* { currentUser.email} */}\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required/>\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Sign Up</Button>\r\n\r\n                    </Form> \r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/login\">Log In</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport {    Card, Button, Alert    } from 'react-bootstrap'\r\nimport {    useAuth } from \"../contexts/AuthContext\"\r\nimport {    Link, useHistory    } from \"react-router-dom\"\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n    \r\n    async function handleLogout(){\r\n        setError('')\r\n\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch {\r\n            setError('Failed to log out')\r\n        }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email: </strong> {currentUser.email}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            \r\n            <div className=\"w-100 text-center mt-2\">\r\n                    <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState  } from 'react'\r\nimport { Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport {    Link, useHistory    } from 'react-router-dom' \r\n\r\n\r\nexport default function Login() {\r\n    \r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n\r\n    const {login} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history  = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        // if (passwordRef.current.value !== passwordConfirmRef.current.value){\r\n        //     return setError('Passwords do not match')\r\n        // }\r\n\r\n        try{\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Log In</h2> \r\n                    {/* {JSON.stringify(currentUser)} */}\r\n                    {/* { currentUser.email} */}\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required/>\r\n                        </Form.Group>\r\n\r\n                        {/* <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required/>\r\n                        </Form.Group> */}\r\n\r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Log In</Button>\r\n                        \r\n                        <div className=\"w-100 text-center mt-3\"><Link to=\"/forgot-password\">Forgot Password</Link></div>\r\n                    </Form> \r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {    Route, Redirect   } from 'react-router-dom'\r\nimport {    useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}) {\r\n    \r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <Route\r\n           {...rest}\r\n           render = {props => {\r\n               return currentUser? <Component {...props}/> : <Redirect to=\"/login\"/>\r\n           }} \r\n        ></Route>\r\n    )\r\n}\r\n","import React, { useRef, useState  } from 'react'\r\nimport { Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport {    Link   } from 'react-router-dom' \r\n\r\n\r\nexport default function ForgotPassword() {\r\n    \r\n    const emailRef = useRef()\r\n    //const passwordRef = useRef()\r\n\r\n    const { resetPassword   } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    //const history  = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        // if (passwordRef.current.value !== passwordConfirmRef.current.value){\r\n        //     return setError('Passwords do not match')\r\n        // }\r\n\r\n        try{\r\n            setMessage(\"\")\r\n            setError(\"\")\r\n            setLoading(true)\r\n            //await login(emailRef.current.value, passwordRef.current.value)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage(\"Check your inbox for further instructions to reset password\")\r\n            //history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Password Reset</h2> \r\n                    {/* {JSON.stringify(currentUser)} */}\r\n                    {/* { currentUser.email} */}\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required/>\r\n                        </Form.Group>\r\n\r\n                        {/* <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required/>\r\n                        </Form.Group> */}\r\n\r\n                        {/* <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required/>\r\n                        </Form.Group> */}\r\n\r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Reset Password</Button>\r\n                        \r\n                        <div className=\"w-100 text-center mt-3\"><Link to=\"/login\">Log In</Link></div>\r\n                    </Form> \r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Signup from \"./Signup\";\n\nimport { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport {  BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport Dashboard from \"./Dashboard\"\nimport Login from './Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from './ForgotPassword'\n\nfunction App() {\n  return (\n    \n      <Container className=\"d-flex align-items-center justify-content-center\" style={{  minHeight:'100vh' }}>\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard}/>\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login}/>\n              <Route path=\"/forgot-password\" component={ForgotPassword}/>\n            </Switch>\n          </AuthProvider>\n        </Router>\n        \n      </div>\n    </Container>\n  \n    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './components/App';\n//import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}